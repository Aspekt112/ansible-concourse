---
# https://github.com/cloudfoundry-incubator/garden-linux/blob/master/README.md
# https://github.com/concourse/concourse/issues/229
# https://github.com/concourse/bin

- name: Provision my keys
  hosts: all
  become: True
  pre_tasks:
    - name: pre Putting you authorized_key
      authorized_key:
        key="{{lookup('file', '~/.ssh/id_rsa.pub')}}"
        user="{{localuser}}"
        manage_dir=yes
      ignore_errors: yes

    - name: pre APT key
      apt_key: 
        id="ACCC4CF8"
        url='https://postgresql.org/media/keys/ACCC4CF8.asc'
      
    - name: pre Add apt for postgres
      apt_repository: 
        update_cache="yes"
        repo='deb https://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main' 
        state=present

    - name: pre Install demo packages
      apt:
        name="{{item}}"
        update_cache=yes
        cache_valid_time=3600
      with_items: 
         - "git"
         - "postgresql-9.4"
         - "python-psycopg2"
         - "vim"
         - "curl"

    - name : pre Configure postgresql
      lineinfile: 
        dest=/etc/postgresql/9.4/main/postgresql.conf
        regexp='^listen_addresses'
        line="listen_addresses = '*'"
      register: postgresql_conf

    - name : pre Configure postgresql hba.conf
      lineinfile: 
        dest=/etc/postgresql/9.4/main/pg_hba.conf
        insertafter="EOF"
        line="host  all  all 0.0.0.0/0 md5"

    - name: pre Create postgresql db
      postgresql_db: 
         name=concourse
      sudo_user: postgres

    - name : pre Create postgresql user 
      postgresql_user: 
        db=concourse
        name=concourseci
        password=conpass
      sudo_user: postgres

    - name : pre Service postgresql
      service: 
        name=postgresql
        state=started
      register: postgresql_conf
  roles:
    - { name: "ansible-go", tags: "go" }
    - { name: "ansible-concourseci", tags: "concourse" }
# ssh-keygen -t rsa -f host_key -N ''
# ssh-keygen -t rsa -f worker_key -N ''
# ssh-keygen -t rsa -f session_signing_key -N ''
# cp worker_key.pub authorized_worker_keys

# ./concourse web \
#   --basic-auth-username test \
#   --basic-auth-password test \
#   --session-signing-key session_signing_key \
#   --tsa-host-key session_signing_key \
#   --tsa-authorized-keys authorized_worker_keys \
#   --external-url http://192.168.56.150:8080\
#   --postgres-data-source postgres://vagrant:vagrant@127.0.0.1/concourse 


# ./concourse web \
#   --basic-auth-username test \
#   --basic-auth-password test \
#   --session-signing-key session_signing_key \
#   --tsa-host-key session_signing_key \
#   --tsa-authorized-keys authorized_worker_keys \
#   --external-url http://127.0.0.1:8080\
#   --postgres-data-source postgres://vagrant:vagrant@127.0.0.1/concourse 


# sudo ./concourse worker \
#   --work-dir /opt/concourse/worker \
#   --peer-ip 127.0.0.1 \
#   --tsa-host 127.0.0.1 \
#   --tsa-public-key worker_key.pub \
#   --tsa-worker-private-key worker_key \
#   --bind-port=7778








# ./concourse web \
#   --basic-auth-username test \
#   --basic-auth-password test \
#   --session-signing-key session_signing_key \
#   --tsa-host-key session_signing_key \
#   --tsa-authorized-keys  host_key \
#   --external-url http://127.0.0.1:8080\
#   --postgres-data-source postgres://vagrant:vagrant@127.0.0.1/concourse 


# sudo ./concourse worker \
#   --work-dir /opt/concourse/worker \
#   --peer-ip 127.0.0.1 \
#   --tsa-host 127.0.0.1 \
#   --tsa-public-key  host_key.pub \
#   --tsa-worker-private-key  host_key \
#   --bind-port=7778